name: Cron

on:
  schedule:
    # Run every day at 00:00 UTC
    - cron: 0 0 * * *

jobs:
  main:
    name: ${{ matrix.os }} / ${{ matrix.python-version }} / ${{ matrix.pip-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - MacOS
        python-version:
          - 3.9
          - 3.6
          - 3.7
          - 3.8
        pip-version:
          - main
    env:
      PY_COLORS: 1
      TOXENV: pip${{ matrix.pip-version }}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Calculate cache metadata
        id: cache-meta
        shell: python
        run: |
          import hashlib
          import subprocess
          import sys

          cache_dir_cmd = sys.executable, '-m', 'pip', 'cache', 'dir'
          cache_dir = subprocess.check_output(
              cache_dir_cmd,
              universal_newlines=True,
          ).strip()

          version_hash = hashlib.sha512(sys.version.encode()).hexdigest()

          print(
              '::set-output name=pip-cache-dir:{cache_dir!s}'.
              format(cache_dir=cache_dir)
          )
          print(
              '::set-output name=python-version-hash:{version_hash!s}'.
              format(version_hash=version_hash)
          )
          print(
              "::set-output name=cache-key-pip-prefix:"
              "${{ runner.os }}-py{version_hash!s}-pip-".
              format(version_hash=version_hash)
          )
          print(
              "::set-output name=pip-cache-key-files:"
              "${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-"
              "${{ hashFiles('tox.ini') }}-"
              "${{ hashFiles('.pre-commit-config.yaml') }}".
              format(version_hash=version_hash)
          )
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-meta.outputs.pip-cache-dir }}
          key: >-
            ${{
                steps.cache-meta.outputs.cache-key-pip-prefix
            }}${{
                steps.cache-meta.outputs.pip-cache-key-files
            }}
          restore-keys: ${{ steps.cache-meta.outputs.cache-key-prefix }}

      - name: Install test dependencies
        run: python -m pip install -U tox virtualenv
      - name: Prepare test environment
        run: tox --notest -p auto --parallel-live
      - name: Test pip ${{ matrix.pip-version }}
        run: tox

  pypy:
    name: ${{ matrix.os }} / ${{ matrix.python-version }} / ${{ matrix.pip-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - MacOS
          # TODO: fix test_realistic_complex_sub_dependencies test on Windows
          # - Windows
        python-version:
          - pypy3
        pip-version:
          - latest
    env:
      PY_COLORS: 1
      TOXENV: pip${{ matrix.pip-version }}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: >-
            ${{
              runner.os == 'Linux' &&
              '~/.cache/pip'
              || ''
            }}${{
              runner.os == 'macOS' &&
              '~/Library/Caches/pip'
              || ''
            }}${{
              runner.os == 'Windows' &&
              '~\AppData\Local\pip\Cache'
              || ''
            }}
          key: >-
            ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{
            hashFiles('setup.py') }}-${{ hashFiles('tox.ini') }}-${{
            hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install tox
        run: pip install tox
      - name: Prepare test environment
        run: tox --notest -p auto --parallel-live
      - name: Test pip ${{ matrix.pip-version }}
        run: tox
